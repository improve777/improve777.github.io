<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>improve777.github.io</title>
    <link>https://improve777.github.io/</link>
    
    <atom:link href="https://improve777.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Sun, 03 Jan 2021 22:34:14 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>안드로이드 BaseContext</title>
      <link>https://improve777.github.io/2020/12/28/2020-12-28-android-base-context/</link>
      <guid>https://improve777.github.io/2020/12/28/2020-12-28-android-base-context/</guid>
      <pubDate>Sun, 27 Dec 2020 18:15:04 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;BaseContext&quot;&gt;&lt;a href=&quot;#BaseContext&quot; class=&quot;headerlink&quot; title=&quot;BaseContext?&quot;&gt;&lt;/a&gt;BaseContext?&lt;/h2&gt;&lt;p&gt;최근에 노재춘님의 ‘안드로이드 프로그래밍 Next Step</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="BaseContext"><a href="#BaseContext" class="headerlink" title="BaseContext?"></a>BaseContext?</h2><p>최근에 노재춘님의 ‘안드로이드 프로그래밍 Next Step’ 책을 읽으면서 baseContext 와 activityContext 가 왜 다른지 의문이 생겼습니다.<br>그래서 간단하게 context 에 대해 학습한 내용을 정리해봤습니다.</p><h2 id="클래스-구성도"><a href="#클래스-구성도" class="headerlink" title="클래스 구성도"></a>클래스 구성도</h2><p><img src="context-diagram.png" alt="context 계층"></p><p>그림을 보면 Context 를 상속한 <code>ContextWrapper</code> 를 각각의 컴포넌트들(액티비티, 서비스, 어플리케이션)이 상속하고 있습니다.<br>그리고 <code>ContentProvider</code> 와 <code>BroadcastReceiver</code> 는 자신의 context 가 없다는 것을 알 수 있습니다.</p><h2 id="Context-의-종류"><a href="#Context-의-종류" class="headerlink" title="Context 의 종류"></a>Context 의 종류</h2><ul><li><strong>ApplicationContext</strong><br>앱이 실행되어 있는 동안에 생성되어 있는 Context 입니다. 주로 액티비티의 생명주기와 무관한 경우에 <code>getActivityContext()</code> 함수로 가져와서 사용하게 됩니다.</li><li><strong>BaseContext</strong><br>액티비티가 <code>attachBaseContext()</code> 함수를 호출하는 시점에 받게 되는 context 입니다. 주로 asset, 시스템 정보를 가져올 때 사용됩니다.</li><li><strong>ActivityContext</strong><br>액티비티가 Context 를 상속하는 구조이기 때문에 액티비티 또한 context 로서 동작합니다. 주로 화면의 뷰를 생성하거나 다른 컴포넌트를 실행할 때 사용합니다.</li></ul><h2 id="BaseContext-와-ActivityContext-는-다른건가"><a href="#BaseContext-와-ActivityContext-는-다른건가" class="headerlink" title="BaseContext 와 ActivityContext 는 다른건가?"></a>BaseContext 와 ActivityContext 는 다른건가?</h2><p>ContextWrapper 클래스가 Context 를 상속받기 때문에 Activity 또한 Context 가 됩니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Activity</span> <span class="keyword">extends</span> <span class="title">ContextThemeWrapper</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextThemeWrapper</span> <span class="keyword">extends</span> <span class="title">ContextWrapper</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextWrapper</span> <span class="keyword">extends</span> <span class="title">Context</span> </span>&#123;</span><br><span class="line">  Context mBase;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>액티비티에서 <code>attach()</code> 함수 내부에서 <code>ContextWrapper</code> 클래스의 <code>attachBaseContext()</code> 함수를 호출하여 <code>ActivityThread</code> 에서 생성한 <code>Context</code> 의 구현체 클래스인 <code>ContextImpl</code> 을 받게 됩니다.<br>이때 받는 context 가 <strong>baseContext</strong> 입니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MainActivity.java</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> class MainActivity extends <span class="title">AppCompatActivity</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context newBase)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.attachBaseContext(newBase);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ContextWrapper.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContextWrapper</span> <span class="keyword">extends</span> <span class="title">Context</span> </span>&#123;</span><br><span class="line">  Context mBase;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context newBase)</span> </span>&#123;</span><br><span class="line">    mBase = newBase;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Calligraphy-라이브러리-원리"><a href="#Calligraphy-라이브러리-원리" class="headerlink" title="Calligraphy 라이브러리 원리"></a>Calligraphy 라이브러리 원리</h2><p>Calligraphy 라이브러리는 지정한 폰트를 간단하게 앱 전역 폰트로 적용할 수 있는 라이브러리입니다.<br>어플리케이션 클래스에서 설정을 초기화하고, 액티비티에서는 간단하게 다음의 코드를 추가해줌으로서 설정에서 지정한 폰트를 앱 전체에서 적용되게 할 수 있습니다.<br>코드를 살펴보면 <strong><code>attachBaseContext()</code> 함수를 활용하여 기능을 구현한 것을 알 수 있습니다.</strong>  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context newBase)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.attachBaseContext(CalligraphyContextWrapper.wrap(newBase));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>attachBaseContext()</code> 함수를 호출할때 baseContext 를 <code>CalligraphyContextWrapper</code> 로 감싸주게 됩니다.<br><code>CalligraphyContextWrapper</code> 클래스에서는 <code>getSystemService()</code> 함수가 재정의되어 있습니다. 이후 액티비티에서 layoutInflater 를 얻어올 때, 지정된 폰트가 적용된 뷰를 반환하게 하기 위한 <code>CalligraphyLayoutInflater</code> 로 가져오기 위함입니다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">getSystemService</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (LAYOUT_INFLATER_SERVICE.equals(name)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mInflater == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mInflater = <span class="keyword">new</span> CalligraphyLayoutInflater(LayoutInflater.from(getBaseContext()), <span class="keyword">this</span>, mAttributeId, <span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mInflater;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.getSystemService(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h2><ul><li><a href="http://www.yes24.com/Product/Goods/41085242">안드로이드 프로그래밍 Next Step</a></li><li><a href="https://arabiannight.tistory.com/284">안드로이드/Android Context 란?</a></li><li><a href="https://medium.com/@ali.muzaffar/which-context-should-i-use-in-android-e3133d00772c">Which Context should I use in Android?</a></li></ul>]]></content:encoded>
      
      
      <category domain="https://improve777.github.io/categories/Android/">Android</category>
      
      
      <category domain="https://improve777.github.io/tags/context/">context</category>
      
      
      <comments>https://improve777.github.io/2020/12/28/2020-12-28-android-base-context/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://improve777.github.io/2020/12/28/hello-world/</link>
      <guid>https://improve777.github.io/2020/12/28/hello-world/</guid>
      <pubDate>Sun, 27 Dec 2020 16:15:13 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content:encoded>
      
      
      
      
      <comments>https://improve777.github.io/2020/12/28/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
